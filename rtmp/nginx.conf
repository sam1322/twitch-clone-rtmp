worker_processes auto;
rtmp_auto_push on;
events {}
rtmp {
    server {
        listen 1935;
        listen [::]:1935 ipv6only=on;

        # application live {
        #     live on;
        #     record off;
        #     on_publish http://host.docker.internal:8080/publish;
        #     # on_publish http://auth_server:8000/auth;
        #     on_publish_done http://host.docker.internal:8080/publish_done;

        # }
        application app {
            live on;

            # No RTMP playback
            deny play all;

            # Push this stream to the local HLS packaging application
            push rtmp://127.0.0.1:1935/hls-live;

            # HTTP callback when a stream starts publishing
            # Should return 2xx to allow, 3xx to redirect, anything else to deny.
            on_publish http://host.docker.internal:8080/on_publish;

            # Called when a stream stops publishing.  Response is ignored.
            on_publish_done http://host.docker.internal:8080/on_publish_done;
        }

        #   application hls-live {
        #     live on;
        #     hls on;
        #     hls_path /tmp/hls;
        #     hls_fragment 10s;
        #     # hls_fragment 10s; # default is 5s
        #     hls_playlist_length 5m; # default is 30s
        #     # once playlist length is reached it deletes the oldest fragments

        #     # authentication
        #     # on_publish http://auth_server:8000/auth;
        # }

        application hls-live {
            live on;

            # No RTMP playback
            deny play all;

            # Only allow publishing from localhost
            allow publish 127.0.0.1;
            deny publish all;

            # Package this stream as HLS
            hls on;
            hls_path /var/www/live;

            # Put streams in their own subdirectory under `hls_path`
            hls_nested on;
            hls_fragment_naming system;
        }
    }
}

http {
    server {
        listen 8000;

        location / {
            root /www;
        }

        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                application/octet-stream ts;
            }
            root /tmp;
            add_header Cache-Control no-cache;

            # To avoid issues with cross-domain HTTP requests (e.g. during development)
            add_header Access-Control-Allow-Origin *;
        }
    }
}